{"ast":null,"code":"var _jsxFileName = \"D:\\\\Portofolio\\\\portofolio\\\\src\\\\components\\\\project.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Project() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto grid justify-center \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-3xl font-semibold flex\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title-about__number\",\n          children: \" 03. \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 8,\n          columnNumber: 11\n        }, this), \" Some Things I've Built\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"strip\",\n          children: \" \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"project-desc grid md:grid-cols-2 grid-cols-1 mt-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"project_title\",\n        children: \"Featured Project\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"project_name\",\n        children: \" Face Mask Detection \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Face Mask Detection system to detect face masks in static images as well as in real-time video streams. Own custom dataset was built using Bing Search API and Kaggle. Inspired by Adrian Rosebrock's PyImageSearch Blog.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"OpenCV\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"TensorFlow\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n}\n_c = Project;\n\nvar _c;\n\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","Project"],"sources":["D:/Portofolio/portofolio/src/components/project.js"],"sourcesContent":["import React from \"react\";\r\n\r\nexport default function Project() {\r\n  return (\r\n    <div className=\"container mx-auto grid justify-center \">\r\n      <div className=\"title\">\r\n        <h3 className=\"text-3xl font-semibold flex\">\r\n          <span className=\"title-about__number\"> 03. </span> Some Things I've\r\n          Built\r\n          <span className=\"strip\"> </span>\r\n        </h3>\r\n      </div>\r\n      <div className=\"project-desc grid md:grid-cols-2 grid-cols-1 mt-8\">\r\n        <h5 className=\"project_title\">Featured Project</h5>\r\n        <h4 className=\"project_name\"> Face Mask Detection </h4>\r\n        <p>\r\n          Face Mask Detection system to detect face masks in static images as\r\n          well as in real-time video streams. Own custom dataset was built using\r\n          Bing Search API and Kaggle. Inspired by Adrian Rosebrock's\r\n          PyImageSearch Blog.\r\n        </p>\r\n        <ul>\r\n          <li>OpenCV</li>\r\n          <li>TensorFlow</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,OAAT,GAAmB;EAChC,oBACE;IAAK,SAAS,EAAC,wCAAf;IAAA,wBACE;MAAK,SAAS,EAAC,OAAf;MAAA,uBACE;QAAI,SAAS,EAAC,6BAAd;QAAA,wBACE;UAAM,SAAS,EAAC,qBAAhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,0CAGE;UAAM,SAAS,EAAC,OAAhB;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAQE;MAAK,SAAS,EAAC,mDAAf;MAAA,wBACE;QAAI,SAAS,EAAC,eAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAI,SAAS,EAAC,cAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF,eASE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA,QATF;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD;KA1BuBA,O"},"metadata":{},"sourceType":"module"}